function condition_number_gui(action, rindex, rsols, rcond, findex, fsols, fcond, num_intervals)

persistent newFig;
global reject_condition_number;


if strcmp(action, 'init')
    
    newFig=figure('menubar', 'none', 'resize', 'off', 'Units', 'centimeters','Name','Condition Number' ,'NumberTitle','off','Visible','on');
    set(0,'Units','centimeters')
    screen_size = get(0,'ScreenSize');
    figwidth = 15;
    figheight = 18;
    figleft = (screen_size(3) - figwidth)/2;
    figbottom = (screen_size(4) - figheight)/2;
    set(newFig, 'Units', 'centimeters', 'Position', [figleft figbottom figwidth figheight]);
    
    uicontrol('style', 'text', 'Units', 'centimeters', 'position', [0.5, figheight-1.5, figwidth-1, 1], 'parent', newFig, ...
        'Fontunits', 'points', 'fontsize', 10, 'BackgroundColor', get(newFig, 'Color'), 'HorizontalAlignment', 'left', ...
        'string', 'The time series is broken up into a number of equal intervals, and the condition number is a');
    uicontrol('style', 'text', 'Units', 'centimeters', 'position', [0.5, figheight-2, figwidth-1, 1], 'parent', newFig, ...
        'Fontunits', 'points', 'fontsize', 10, 'BackgroundColor', get(newFig, 'Color'), 'HorizontalAlignment', 'left', ...
        'string', 'measure of the closeness to singularity of the forward and backward integration matrices for');
    uicontrol('style', 'text', 'Units', 'centimeters', 'position', [0.5, figheight-2.5, figwidth-1, 1], 'parent', newFig, ...
        'Fontunits', 'points', 'fontsize', 10, 'BackgroundColor', get(newFig, 'Color'), 'HorizontalAlignment', 'left', ...
        'string', 'each interval. Condition numbers for the intervals with the worst (largest) values are plotted.');
    
    uicontrol('style', 'text', 'Units', 'centimeters', 'position', [0.5, figheight-3.25, figwidth-1, 1], 'parent', newFig, ...
        'Fontunits', 'points', 'fontsize', 10, 'BackgroundColor', get(newFig, 'Color'), 'HorizontalAlignment', 'left', ...
        'string', ['These values were produced using ' num_intervals ' time blocks. If you click Reject, you will be']);
    
    uicontrol('style', 'text', 'Units', 'centimeters', 'position', [0.5, figheight-3.75, figwidth-1, 1], 'parent', newFig, ...
        'Fontunits', 'points', 'fontsize', 10, 'BackgroundColor', get(newFig, 'Color'), 'HorizontalAlignment', 'left', ...
        'string', 'prompted to enter a new, higher value. The integation matrices will then be recalculated.');
    
    ax = axes('parent', newFig,'Units','centimeters', 'position', [2 2.5 figwidth-3 figheight-6.5]);
    plot(ax, rsols,rcond,'b.');
    hold on
    plot(ax, fsols,fcond,'r.');
    ylabel('log(\kappa (X)) (\kappa is condition no.)')
    xlabel(['s (as a fraction of the interval from t_{',num2str(findex), '} to t_{',num2str(findex+1), '})'])
    legend(['X=X(s,t_{',num2str(rindex+1), '})'],['X=X(t_{',num2str(findex), '},s)']);
    xlim([0 1]);
    
    %buttons
    uicontrol( ...
        'Style','pushbutton', ...
        'Units','centimeters', ...
        'Position',[figwidth-5.1 0.1 2.5 0.8], ...
        'Interruptible','on', ...
        'string', 'Accept', ...
        'HandleVisibility', 'on', ...
        'Parent',newFig, ...
        'FontUnits', 'points', 'FontSize', 10, ...
        'FontWeight', 'bold', ...
        'Callback', 'condition_number_gui(''accept'');');
    uicontrol( ...
        'Style','pushbutton', ...
        'Units','centimeters', ...
        'Position',[figwidth-2.6 0.1 2.5 0.8], ...
        'Interruptible','on', ...
        'string', 'Reject', ...
        'HandleVisibility', 'on', ...
        'Parent',newFig, ...
        'FontUnits', 'points', 'FontSize',10, ...
        'FontWeight', 'bold', ...
        'Callback','condition_number_gui(''reject'');');
    
    set(newFig, 'visible', 'on');
    uiwait(newFig);
    
elseif strcmp(action, 'accept')
    reject_condition_number = false;
    delete(gcf);
    disp('done');
    drawnow;
elseif strcmp(action, 'reject')

    reject_condition_number = true;
    delete(gcf);
    
end

